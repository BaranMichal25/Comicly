apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-allopen'


allOpen {
    annotation 'io.spacecowboyapps.comicly.testing.OpenClass'
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "io.spacecowboyapps.comicly"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "io.spacecowboyapps.comicly.ComiclyTestRunner"

        Map marvelKeys = getMarvelKeys()
        buildConfigField("String", "PRIVATE_KEY", marvelKeys['privateKey'])
        buildConfigField("String", "PUBLIC_KEY", marvelKeys['publicKey'])

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation": "$projectDir/schemas".toString()
                ]
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Support
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"

    // RecyclerView
    implementation "com.android.support:recyclerview-v7:$support_version"

    // CardView
    implementation "com.android.support:cardview-v7:$support_version"

    // ViewModel + LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"

    // Paging
    implementation "android.arch.paging:runtime:$paging_version"

    // Room
    implementation "android.arch.persistence.room:runtime:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    // RxJava 2
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    // OkHttp
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'

    //Retrofit 2
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Constraint Layout
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

    // AVLoadingIndicatorView
    implementation 'com.wang.avi:library:2.1.3'

    // Dependency Injection
    implementation "com.google.dagger:dagger:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    compileOnly 'javax.annotation:jsr250-api:1.0'

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation("org.assertj:assertj-core:3.10.0")
    testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
    testImplementation "android.arch.core:core-testing:$lifecycle_version"

    // Android Testing
    androidTestImplementation("org.assertj:assertj-core:3.10.0")
    androidTestImplementation("com.android.support.test.espresso:espresso-intents:$espresso_version")
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}


def getMarvelKeys() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('marvel.properties').newDataInputStream())
    def privateKey = properties.getProperty('PRIVATE_KEY')
    def publicKey = properties.getProperty('PUBLIC_KEY')
    if (privateKey == null || publicKey == null) {
        throw new GradleException("At least one of Marvel keys was not set")
    }
    [
            'privateKey': privateKey,
            'publicKey' : publicKey,
    ]
}
